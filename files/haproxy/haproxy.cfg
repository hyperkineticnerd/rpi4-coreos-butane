#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log 172.16.100.11:514 local2 notice
    #log /dev/log local2 info

    #chroot      /var/lib/haproxy
    #pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    #ssl-default-bind-ciphers PROFILE=SYSTEM
    #ssl-default-server-ciphers PROFILE=SYSTEM
    #ssl-dh-param-file /etc/haproxy/dhparams.pem

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    option                  tcplog
    option                  dontlognull
    option http-server-close
    #option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
listen stats
    bind *:9000
    mode http
    stats enable
    stats uri /
    stats refresh 10s
    stats admin if TRUE

frontend fe_http_passthru
    mode http
    bind 0.0.0.0:80

    acl acl_gitlab_http     hdr(host) -i gitlab.developer.hkn.lab
    acl acl_mattermost_http hdr(host) -i mattermost.developer.hkn.lab
    acl acl_registry_http   hdr(host) -i registry.developer.hkn.lab
    acl acl_pages_http      hdr(host) -i pages.developer.hkn.lab

    use_backend be_gitlab if acl_gitlab_http

    default_backend be_http_redirect

frontend fe_http_redirect
    bind 0.0.0.0:81
    default_backend be_tls_edge_termination

frontend fe_tls_passthru
    mode tcp
    bind 0.0.0.0:443

    # Primary TLS ACL
    acl acl_clienthello req_ssl_hello_type 1
    tcp-request inspect-delay 5s
    tcp-request content accept if acl_clienthello

    default_backend be_tls_edge_termination

frontend fe_tls_edge_termination
    mode http
    bind 0.0.0.0:1443 v4v6 ssl crt /usr/local/etc/haproxy/certs
    #http-request set-header X-Forwarded-Proto https if { ssl_fc }
    #http-request set-header X-Forwarded-Proto http if !{ ssl_fc }
    #http-request set-header X-Forwarded-For %[src]

    # Keycloak ACL
    acl acl_keycloak hdr_dom(host) -i keycloak.hknlab.io

    # Jellyfin ACL
    acl acl_jellyfin hdr_dom(host) -i jellyfin.hknlab.io

    # Matrix client traffic
    acl acl_matrix_host hdr(host) -i matrix.hknlab.io matrix.hknlab.io:443 matrix.hknlab.io:80 hknlab.io:80 hknlab.io hknlab.io:443 
    acl acl_matrix_path path_beg /_matrix
    acl acl_matrix_path path_beg /_synapse/client

    # Internal GitLab ACL
    acl acl_gitlab_tls     hdr_dom(host) -i gitlab.developer.hkn.lab
    acl acl_mattermost_tls hdr_dom(host) -i mattermost.developer.hkn.lab
    acl acl_registry_tls   hdr_dom(host) -i registry.developer.hkn.lab
    acl acl_pages_tls      hdr_dom(host) -i pages.developer.hkn.lab

    # FE Routing
    #use_backend be_keycloak if acl_keycloak
    use_backend be_jellyfin if acl_jellyfin

    use_backend be_matrix if acl_matrix_host # acl_matrix_path

    use_backend be_gitlab if acl_pages_tls
    use_backend be_gitlab if acl_registry_tls
    use_backend be_gitlab if acl_mattermost_tls
    use_backend be_gitlab if acl_gitlab_tls

    #default_backend static

frontend fe_matrix_federation_tls
    mode http
    bind 0.0.0.0:8448 v4v6 ssl crt /usr/local/etc/haproxy/certs/hknlab.io.pem alpn h2,http/1.1
    # bind 0.0.0.0:8448 v4v6 ssl crt /usr/local/etc/haproxy/certs/
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-Forwarded-Proto http if !{ ssl_fc }
    http-request set-header X-Forwarded-For %[src]

    default_backend be_matrix

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------

# backend be_keycloak
#     balance roundrobin
#     http-request set-header X-Forwarded-Port %[dst_port]
#     http-request add-header X-Forwarded-Proto https if { ssl_fc }
#     #server keycloak_container_https 172.16.3.6:8443 check
#     server keycloak_container_http 172.16.3.6:8080 check

backend be_http_redirect
    mode http
    server haproxy-http 127.0.0.1:81 check

backend be_tls_edge_termination
    mode tcp
    server haproxy-https 127.0.0.1:1443 check

backend be_gitlab
    mode http
    balance roundrobin
    # http-request set-header X-Forwarded-Proto https if { ssl_fc }
    # http-request set-header X-Forwarded-Proto http if !{ ssl_fc }
    # http-request set-header X-Forwarded-For %[src]
    # server gitlab 172.16.110.11:8443 check
    server synology-gitlab-ee 172.16.100.11:30080 check

backend be_jellyfin
    mode http
    balance roundrobin
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header Host insecure-jellyfin.apps.hub.ocp4.hkn.lab
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server ocp4_jellyfin_http  172.16.110.11:80 check

backend be_matrix
    mode http
    balance roundrobin
    option forwardfor
    http-request set-header Host insecure-matrix-synapse.apps.hub.ocp4.hkn.lab
    server ocp4_matrix_synapse 172.16.110.11:80 check

# backend static
#     balance roundrobin
#     server static 172.16.110.11:2443 check
